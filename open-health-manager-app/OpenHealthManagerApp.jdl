application {
  config {
    applicationType monolith
    authenticationType jwt
    baseName OpenHealthManagerApp
    blueprints []
    buildTool maven
    cacheProvider ehcache
    clientFramework react
    clientPackageManager npm
    clientTheme none
    creationTimestamp 1653436424574
    databaseType sql
    devDatabaseType h2Disk
    dtoSuffix DTO
    enableGradleEnterprise false
    enableHibernateCache true
    enableSwaggerCodegen false
    enableTranslation true
    gradleEnterpriseHost ""
    jhiPrefix jhi
    jhipsterVersion "7.8.1"
    jwtSecretKey "NmExNWM0MjE4NTFmMmYwY2M0MTUxY2E1MWNiNmIxYjFmZDI3ODkzNjJlMTA5NThhZWNhNWE1N2QxY2Y4YmQxYjRmZDI5OTQzOTVhMmU1ZDkxNTg1Y2Q1YWY3ZGQxZDViMTFmOGNlZjY0NDNjOTVjYzM0NmVlMjYwMzZkYTRlNDI="
    languages [en]
    messageBroker false
    nativeLanguage en
    otherModules []
    packageName org.mitre.healthmanager
    prodDatabaseType postgresql
    reactive false
    searchEngine false
    serverPort 8080
    serviceDiscoveryType no
    skipUserManagement false
    testFrameworks []
    websocket false
    withAdminUi true
  }

  entities FHIRClient, FHIRPatient, FHIRPatientConsent, UserDUA
}

entity FHIRClient {
  name String required
  displayName String required
  uri String
  fhirOrganizationId String required
  clientDirection ClientDirection
}
entity FHIRPatient {
  fhirId String required
}
entity FHIRPatientConsent {
  approve Boolean
  fhirResource TextBlob
}
entity UserDUA {
  active Boolean required
  version String required
  ageAttested Boolean required
  activeDate Instant required
  revocationDate Instant
}
enum ClientDirection {
  OUTBOUND (Outbound),
  INBOUND (Inbound),
  BIDIRECTIONAL (Bidirectional)
}

relationship OneToOne {
  FHIRPatient{user(login) required} to User
}
relationship ManyToOne {
  FHIRPatientConsent{user(login) required} to User
  FHIRPatientConsent{client(name)} to FHIRClient
  UserDUA{user(login) required} to User
}

dto FHIRClient, UserDUA with mapstruct
paginate FHIRClient, FHIRPatient, FHIRPatientConsent, UserDUA with pagination
service FHIRClient, FHIRPatient, FHIRPatientConsent, UserDUA with serviceClass
